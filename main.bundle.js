(()=>{"use strict";var r={317:(r,n,e)=>{e.d(n,{Z:()=>a});var t=e(537),o=e.n(t),i=e(645),s=e.n(i)()(o());s.push([r.id,"/* http://meyerweb.com/eric/tools/css/reset/ \r\n   v2.0 | 20110126\r\n   License: none (public domain)\r\n*/\r\n\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed, \r\nfigure, figcaption, footer, header, hgroup, \r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 100%;\r\n\tvertical-align: baseline;\r\n\tfont-family: inherit;\r\n\tfont-size: inherit;\r\n}\r\narticle, aside, details, figcaption, figure, \r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\nbody {\r\n\tline-height: 1;\r\n}\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}\r\n\r\n","",{version:3,sources:["webpack://./src/styles/0-reset.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,wBAAwB;CACxB,oBAAoB;CACpB,kBAAkB;AACnB;AACA;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/ \r\n   v2.0 | 20110126\r\n   License: none (public domain)\r\n*/\r\n\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed, \r\nfigure, figcaption, footer, header, hgroup, \r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 100%;\r\n\tvertical-align: baseline;\r\n\tfont-family: inherit;\r\n\tfont-size: inherit;\r\n}\r\narticle, aside, details, figcaption, figure, \r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\nbody {\r\n\tline-height: 1;\r\n}\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}\r\n\r\n"],sourceRoot:""}]);const a=s},930:(r,n,e)=>{e.d(n,{Z:()=>a});var t=e(537),o=e.n(t),i=e(645),s=e.n(i)()(o());s.push([r.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap);"]),s.push([r.id,":root {\r\n  --easygreen: rgb(211, 255, 211);\r\n  --mediumgreen: rgb(195, 232, 195);\r\n  --hardgreen: rgb(146, 211, 146);\r\n  --ultragreen: rgb(124, 204, 124);\r\n  --extremegreen: rgb(34, 112, 34);\r\n\r\n  --lightred: rgb(255, 165, 165);\r\n  --darkred: rgb(169, 2, 2);\r\n\r\n  --lightyellow: rgb(255, 255, 143);\r\n  --darkyellow: rgb(247,189,1);\r\n}\r\n\r\n* {\r\n  font-family: 'Roboto', sans-serif;\r\n  box-sizing: border-box;\r\n  font-weight: 200;\r\n  color: black;\r\n}\r\n\r\nbody {\r\n  height: 100vh;\r\n}\r\n\r\nh1 {\r\n  font-size: 24px;\r\n  font-family: 'Roboto', sans-serif;\r\n  font-weight: 600;\r\n}\r\n\r\nh2 {\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n}\r\n\r\np {\r\n  font-size: 14px;\r\n  font-weight: 300;\r\n}\r\n\r\nbutton {\r\n  background: none;\r\n  border: none;\r\n  width: 30px;\r\n  height: 30px;\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  padding: 5px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  border-radius: 50%;\r\n  box-shadow: 0 1px 6px rgb(0,0,0,0.4)\r\n}\r\n\r\nbutton:hover {\r\n  background: lightgray;\r\n  color: black;\r\n}","",{version:3,sources:["webpack://./src/styles/0-style.css"],names:[],mappings:"AAEA;EACE,+BAA+B;EAC/B,iCAAiC;EACjC,+BAA+B;EAC/B,gCAAgC;EAChC,gCAAgC;;EAEhC,8BAA8B;EAC9B,yBAAyB;;EAEzB,iCAAiC;EACjC,4BAA4B;AAC9B;;AAEA;EACE,iCAAiC;EACjC,sBAAsB;EACtB,gBAAgB;EAChB,YAAY;AACd;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,eAAe;EACf,iCAAiC;EACjC,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;EAChB,YAAY;EACZ,WAAW;EACX,YAAY;EACZ,eAAe;EACf,gBAAgB;EAChB,YAAY;EACZ,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,eAAe;EACf,kBAAkB;EAClB;AACF;;AAEA;EACE,qBAAqB;EACrB,YAAY;AACd",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');\r\n\r\n:root {\r\n  --easygreen: rgb(211, 255, 211);\r\n  --mediumgreen: rgb(195, 232, 195);\r\n  --hardgreen: rgb(146, 211, 146);\r\n  --ultragreen: rgb(124, 204, 124);\r\n  --extremegreen: rgb(34, 112, 34);\r\n\r\n  --lightred: rgb(255, 165, 165);\r\n  --darkred: rgb(169, 2, 2);\r\n\r\n  --lightyellow: rgb(255, 255, 143);\r\n  --darkyellow: rgb(247,189,1);\r\n}\r\n\r\n* {\r\n  font-family: 'Roboto', sans-serif;\r\n  box-sizing: border-box;\r\n  font-weight: 200;\r\n  color: black;\r\n}\r\n\r\nbody {\r\n  height: 100vh;\r\n}\r\n\r\nh1 {\r\n  font-size: 24px;\r\n  font-family: 'Roboto', sans-serif;\r\n  font-weight: 600;\r\n}\r\n\r\nh2 {\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n}\r\n\r\np {\r\n  font-size: 14px;\r\n  font-weight: 300;\r\n}\r\n\r\nbutton {\r\n  background: none;\r\n  border: none;\r\n  width: 30px;\r\n  height: 30px;\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  padding: 5px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  border-radius: 50%;\r\n  box-shadow: 0 1px 6px rgb(0,0,0,0.4)\r\n}\r\n\r\nbutton:hover {\r\n  background: lightgray;\r\n  color: black;\r\n}"],sourceRoot:""}]);const a=s},365:(r,n,e)=>{e.d(n,{Z:()=>a});var t=e(537),o=e.n(t),i=e(645),s=e.n(i)()(o());s.push([r.id,'header {\r\n    height: 5%;\r\n    display: flex;\r\n    justify-content: start;\r\n    align-items: center;\r\n    gap: 30px;\r\n    padding: 30px;\r\n    background-color: var(--easygreen);\r\n}\r\n\r\n.title {\r\n    font-weight: 300;\r\n}\r\n\r\ninput[type="date"] {\r\n    background-color: var(--easygreen);\r\n    font-weight: 300;\r\n    font-size: 18px;\r\n    padding: 15px;\r\n    border: none;\r\n    appearance: none;\r\n    border-radius: 10px;\r\n    text-rendering: none;\r\n    /* box-shadow: 0 1px 6px rgb(0,0,0,0.4); */\r\n}\r\n\r\ninput[type=date]:focus {\r\n    outline: none;\r\n}\r\n\r\ninput[type="date"]::-webkit-calendar-picker-indicator {\r\n    background-color: var(--mediumgreen);\r\n    padding: 7px;\r\n    border-radius: 5px;\r\n    box-shadow: 0 1px 3px rgb(0,0,0,0.7);\r\n    background-color: white;\r\n    font-size: 12px;\r\n}\r\n\r\ninput[type="date"]::-webkit-calendar-picker-indicator:hover {\r\n    background-color: var(--ultragreen);\r\n    cursor: pointer;\r\n}',"",{version:3,sources:["webpack://./src/styles/header/header.css"],names:[],mappings:"AAAA;IACI,UAAU;IACV,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,SAAS;IACT,aAAa;IACb,kCAAkC;AACtC;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,kCAAkC;IAClC,gBAAgB;IAChB,eAAe;IACf,aAAa;IACb,YAAY;IACZ,gBAAgB;IAChB,mBAAmB;IACnB,oBAAoB;IACpB,0CAA0C;AAC9C;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,oCAAoC;IACpC,YAAY;IACZ,kBAAkB;IAClB,oCAAoC;IACpC,uBAAuB;IACvB,eAAe;AACnB;;AAEA;IACI,mCAAmC;IACnC,eAAe;AACnB",sourcesContent:['header {\r\n    height: 5%;\r\n    display: flex;\r\n    justify-content: start;\r\n    align-items: center;\r\n    gap: 30px;\r\n    padding: 30px;\r\n    background-color: var(--easygreen);\r\n}\r\n\r\n.title {\r\n    font-weight: 300;\r\n}\r\n\r\ninput[type="date"] {\r\n    background-color: var(--easygreen);\r\n    font-weight: 300;\r\n    font-size: 18px;\r\n    padding: 15px;\r\n    border: none;\r\n    appearance: none;\r\n    border-radius: 10px;\r\n    text-rendering: none;\r\n    /* box-shadow: 0 1px 6px rgb(0,0,0,0.4); */\r\n}\r\n\r\ninput[type=date]:focus {\r\n    outline: none;\r\n}\r\n\r\ninput[type="date"]::-webkit-calendar-picker-indicator {\r\n    background-color: var(--mediumgreen);\r\n    padding: 7px;\r\n    border-radius: 5px;\r\n    box-shadow: 0 1px 3px rgb(0,0,0,0.7);\r\n    background-color: white;\r\n    font-size: 12px;\r\n}\r\n\r\ninput[type="date"]::-webkit-calendar-picker-indicator:hover {\r\n    background-color: var(--ultragreen);\r\n    cursor: pointer;\r\n}'],sourceRoot:""}]);const a=s},149:(r,n,e)=>{e.d(n,{Z:()=>a});var t=e(537),o=e.n(t),i=e(645),s=e.n(i)()(o());s.push([r.id,"main {\r\n    display: flex;\r\n    height: 90%;\r\n    width: 100%;\r\n  }","",{version:3,sources:["webpack://./src/styles/main/0-main.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,WAAW;IACX,WAAW;EACb",sourcesContent:["main {\r\n    display: flex;\r\n    height: 90%;\r\n    width: 100%;\r\n  }"],sourceRoot:""}]);const a=s},295:(r,n,e)=>{e.d(n,{Z:()=>a});var t=e(537),o=e.n(t),i=e(645),s=e.n(i)()(o());s.push([r.id,"/* sidebar */\r\n.sidebar {\r\n    display: flex;\r\n    flex-direction: column;\r\n    /* padding: 10px; */\r\n    height: 100%;\r\n    gap: 5px;\r\n    margin-top: 10px;\r\n  }\r\n  \r\n  .sidebar-wrappers {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 8px;\r\n    gap: 15px;\r\n    margin: 0 20px;\r\n  }\r\n\r\n  .sidebar-wrappers:hover {\r\n    background-color: lightgray;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .sidebar-wrappers img {\r\n    width: 24px;\r\n  }\r\n\r\n  \r\n  .add-list-btn {\r\n    align-self: center;\r\n    width: 100%;\r\n    height: 38px;\r\n    font-size: 16px;\r\n    border-radius: 0;\r\n    box-shadow: none;\r\n    border-top: 1px solid lightgray;\r\n    border-bottom: 1px solid lightgray;\r\n    padding: 20px 0;\r\n    /* border-radius: 15px; */\r\n    /* box-shadow: 0 1px 3px rgb(0,0,0,0.4); */\r\n    font-weight: 400;\r\n  }\r\n\r\n  .add-list-btn:hover {\r\n    background: var(--mediumgreen);\r\n    border: 1px solid var(--mediumgreen);\r\n  }","",{version:3,sources:["webpack://./src/styles/main/1-sidebar.css"],names:[],mappings:"AAAA,YAAY;AACZ;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,YAAY;IACZ,QAAQ;IACR,gBAAgB;EAClB;;EAEA;IACE,aAAa;IACb,mBAAmB;IACnB,YAAY;IACZ,SAAS;IACT,cAAc;EAChB;;EAEA;IACE,2BAA2B;IAC3B,mBAAmB;IACnB,eAAe;EACjB;;EAEA;IACE,WAAW;EACb;;;EAGA;IACE,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,eAAe;IACf,gBAAgB;IAChB,gBAAgB;IAChB,+BAA+B;IAC/B,kCAAkC;IAClC,eAAe;IACf,yBAAyB;IACzB,0CAA0C;IAC1C,gBAAgB;EAClB;;EAEA;IACE,8BAA8B;IAC9B,oCAAoC;EACtC",sourcesContent:["/* sidebar */\r\n.sidebar {\r\n    display: flex;\r\n    flex-direction: column;\r\n    /* padding: 10px; */\r\n    height: 100%;\r\n    gap: 5px;\r\n    margin-top: 10px;\r\n  }\r\n  \r\n  .sidebar-wrappers {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 8px;\r\n    gap: 15px;\r\n    margin: 0 20px;\r\n  }\r\n\r\n  .sidebar-wrappers:hover {\r\n    background-color: lightgray;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .sidebar-wrappers img {\r\n    width: 24px;\r\n  }\r\n\r\n  \r\n  .add-list-btn {\r\n    align-self: center;\r\n    width: 100%;\r\n    height: 38px;\r\n    font-size: 16px;\r\n    border-radius: 0;\r\n    box-shadow: none;\r\n    border-top: 1px solid lightgray;\r\n    border-bottom: 1px solid lightgray;\r\n    padding: 20px 0;\r\n    /* border-radius: 15px; */\r\n    /* box-shadow: 0 1px 3px rgb(0,0,0,0.4); */\r\n    font-weight: 400;\r\n  }\r\n\r\n  .add-list-btn:hover {\r\n    background: var(--mediumgreen);\r\n    border: 1px solid var(--mediumgreen);\r\n  }"],sourceRoot:""}]);const a=s},71:(r,n,e)=>{e.d(n,{Z:()=>a});var t=e(537),o=e.n(t),i=e(645),s=e.n(i)()(o());s.push([r.id,".lists-wrapper {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 30px;\r\n  padding: 30px;\r\n  background-color: lightcyan;\r\n  width: 100%;\r\n  overflow: auto;\r\n}\r\n\r\n.list {\r\n  background: rgb(255, 255, 255);\r\n  width: 63%;\r\n  border-radius: 15px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  /* box-shadow: 0 1px 6px rgb(0,0,0,0.4) */\r\n}\r\n\r\n.list-header {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 25px;\r\n  position: relative;\r\n  padding: 15px;\r\n  background-color: var(--easygreen);\r\n  border-radius: 15px;\r\n}\r\n\r\n.list-checkmark {\r\n  border-radius: 50%;\r\n  color: white;\r\n  background-color: white;\r\n  font-size: 16px;\r\n  box-shadow: 0 1px 5px rgb(0,0,0,0.6);\r\n}\r\n\r\n.list-checkmark:hover {\r\n  color: black;\r\n  background: none;\r\n}\r\n\r\n.list-checkmark:active {\r\n  background:black;\r\n  color: var(--ultragreen);\r\n}\r\n\r\n\r\n.list-title[contenteditable] {\r\n  cursor: pointer;\r\n  padding: 10px;\r\n  color: black;\r\n}\r\n\r\n.list-title[contenteditable]:focus {\r\n  cursor: pointer;\r\n  outline: none;\r\n}\r\n\r\n.list-title[contenteditable]:empty::before {\r\n  content: 'Click to edit list';\r\n  color: gray;\r\n}\r\n\r\n.add-sublist-btn {\r\n  width: 100px;\r\n  height: 40px;\r\n  border-radius: 15px;\r\n  font-size: 14px;\r\n  background: white;\r\n  padding: 0 10px;\r\n  font-weight: 400;\r\n}\r\n\r\n.add-sublist-btn:hover {\r\n  background: var(--easygreen);\r\n  color: var(--extremegreen);\r\n  font-weight: 600;\r\n}\r\n\r\n.priority-indicator {\r\n  font-size: 32px;\r\n  font-weight: 600;\r\n  border-radius: 50%;\r\n  width: 40px;\r\n  height: 40px;\r\n  padding: 10px;\r\n  display: none;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: default;\r\n  box-shadow: 0 1px 6px rgb(0,0,0,0.4);\r\n}\r\n\r\n.high-priority-indicator {\r\n  color: var(--lightred);\r\n}\r\n\r\n.medium-priority-indicator {\r\n  color: var(--lightyellow);\r\n}\r\n\r\n.del-list-btn {\r\n  display: flex;\r\n  font-size: 20px;\r\n  width: 44px;\r\n  height: 44px;\r\n  position: absolute;\r\n  right: 10px;\r\n  color: var(--darkred);\r\n  box-shadow: none;\r\n}\r\n\r\n.sublist-wrapper {\r\n  padding: 5px 15px 25px 45px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 15px;\r\n  position: relative;\r\n}\r\n\r\n.sublist-checkmark { \r\n  color: white;\r\n  width: 24px;\r\n  height: 24px;\r\n  font-size: 12px;\r\n  border: none;\r\n  box-shadow: 0 1px 5px rgb(0,0,0,0.6);\r\n}\r\n\r\n.sublist {\r\n  padding: 5px 10px 5px 10px;\r\n  width: 60%;\r\n  border: none;\r\n  background: none;\r\n  border-bottom: 1px solid black;\r\n  color: black;\r\n  font-weight: 300;\r\n  cursor: pointer;\r\n  line-height: 25px;\r\n}\r\n\r\n.sublist[contenteditable]:empty::before {\r\n  font-weight: 100;\r\n  color: black;\r\n}\r\n\r\n.sublist-desc[contenteditable]:empty::before {\r\n  content: 'Click to edit sublist';\r\n}\r\n\r\n.sublist-time {\r\n  width: 10%;\r\n}\r\n\r\n.sublist-time[contenteditable]:empty::before {\r\n  content: '8:00 PM';\r\n}\r\n\r\n.sublist-duration {\r\n  width: 10%;\r\n}\r\n\r\n.sublist-duration[contenteditable]:empty::before {\r\n  content: '1h 30m';\r\n}\r\n\r\n*[contenteditable] {\r\n  border: none;\r\n  outline: none;\r\n  border-bottom: 1px solid gray;\r\n}\r\n\r\n*[contenteditable]:focus {\r\n  background: rgb(242, 242, 242);\r\n  border-radius: 8px;\r\n}\r\n\r\n.sublist[contenteditable]:empty::before {\r\n  font-weight: 300;\r\n}\r\n\r\nselect {\r\n  font-size: 16px;\r\n  background-color: white;\r\n  padding: 5px;\r\n  font-weight: 400;\r\n  width: 15%;\r\n  outline: none;\r\n  border: none;\r\n  box-shadow: 0 1px 6px rgb(0,0,0,0.4);\r\n  cursor: pointer;\r\n}\r\n\r\noption {\r\n  font-weight: 400;\r\n  background-color: white;\r\n}\r\n\r\noption:nth-child(2) {\r\n  background-color: var(--mediumgreen);\r\n}\r\n\r\noption:nth-child(3) {\r\n  background-color: var(--lightyellow);\r\n}\r\n\r\noption:nth-child(4) {\r\n  background-color: var(--lightred);\r\n}\r\n\r\n.sublist-wrapper > *:last-child {\r\n  font-size: 12px;\r\n  color: var(--darkred);\r\n  box-shadow: none;\r\n}","",{version:3,sources:["webpack://./src/styles/main/2-lists.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,sBAAsB;EACtB,SAAS;EACT,aAAa;EACb,2BAA2B;EAC3B,WAAW;EACX,cAAc;AAChB;;AAEA;EACE,8BAA8B;EAC9B,UAAU;EACV,mBAAmB;EACnB,aAAa;EACb,sBAAsB;EACtB,SAAS;EACT,yCAAyC;AAC3C;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,SAAS;EACT,kBAAkB;EAClB,aAAa;EACb,kCAAkC;EAClC,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;EAClB,YAAY;EACZ,uBAAuB;EACvB,eAAe;EACf,oCAAoC;AACtC;;AAEA;EACE,YAAY;EACZ,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;EAChB,wBAAwB;AAC1B;;;AAGA;EACE,eAAe;EACf,aAAa;EACb,YAAY;AACd;;AAEA;EACE,eAAe;EACf,aAAa;AACf;;AAEA;EACE,6BAA6B;EAC7B,WAAW;AACb;;AAEA;EACE,YAAY;EACZ,YAAY;EACZ,mBAAmB;EACnB,eAAe;EACf,iBAAiB;EACjB,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,4BAA4B;EAC5B,0BAA0B;EAC1B,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,gBAAgB;EAChB,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,aAAa;EACb,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,eAAe;EACf,oCAAoC;AACtC;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,aAAa;EACb,eAAe;EACf,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,WAAW;EACX,qBAAqB;EACrB,gBAAgB;AAClB;;AAEA;EACE,2BAA2B;EAC3B,aAAa;EACb,mBAAmB;EACnB,SAAS;EACT,kBAAkB;AACpB;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,YAAY;EACZ,eAAe;EACf,YAAY;EACZ,oCAAoC;AACtC;;AAEA;EACE,0BAA0B;EAC1B,UAAU;EACV,YAAY;EACZ,gBAAgB;EAChB,8BAA8B;EAC9B,YAAY;EACZ,gBAAgB;EAChB,eAAe;EACf,iBAAiB;AACnB;;AAEA;EACE,gBAAgB;EAChB,YAAY;AACd;;AAEA;EACE,gCAAgC;AAClC;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,6BAA6B;AAC/B;;AAEA;EACE,8BAA8B;EAC9B,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,uBAAuB;EACvB,YAAY;EACZ,gBAAgB;EAChB,UAAU;EACV,aAAa;EACb,YAAY;EACZ,oCAAoC;EACpC,eAAe;AACjB;;AAEA;EACE,gBAAgB;EAChB,uBAAuB;AACzB;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,eAAe;EACf,qBAAqB;EACrB,gBAAgB;AAClB",sourcesContent:[".lists-wrapper {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 30px;\r\n  padding: 30px;\r\n  background-color: lightcyan;\r\n  width: 100%;\r\n  overflow: auto;\r\n}\r\n\r\n.list {\r\n  background: rgb(255, 255, 255);\r\n  width: 63%;\r\n  border-radius: 15px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  /* box-shadow: 0 1px 6px rgb(0,0,0,0.4) */\r\n}\r\n\r\n.list-header {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 25px;\r\n  position: relative;\r\n  padding: 15px;\r\n  background-color: var(--easygreen);\r\n  border-radius: 15px;\r\n}\r\n\r\n.list-checkmark {\r\n  border-radius: 50%;\r\n  color: white;\r\n  background-color: white;\r\n  font-size: 16px;\r\n  box-shadow: 0 1px 5px rgb(0,0,0,0.6);\r\n}\r\n\r\n.list-checkmark:hover {\r\n  color: black;\r\n  background: none;\r\n}\r\n\r\n.list-checkmark:active {\r\n  background:black;\r\n  color: var(--ultragreen);\r\n}\r\n\r\n\r\n.list-title[contenteditable] {\r\n  cursor: pointer;\r\n  padding: 10px;\r\n  color: black;\r\n}\r\n\r\n.list-title[contenteditable]:focus {\r\n  cursor: pointer;\r\n  outline: none;\r\n}\r\n\r\n.list-title[contenteditable]:empty::before {\r\n  content: 'Click to edit list';\r\n  color: gray;\r\n}\r\n\r\n.add-sublist-btn {\r\n  width: 100px;\r\n  height: 40px;\r\n  border-radius: 15px;\r\n  font-size: 14px;\r\n  background: white;\r\n  padding: 0 10px;\r\n  font-weight: 400;\r\n}\r\n\r\n.add-sublist-btn:hover {\r\n  background: var(--easygreen);\r\n  color: var(--extremegreen);\r\n  font-weight: 600;\r\n}\r\n\r\n.priority-indicator {\r\n  font-size: 32px;\r\n  font-weight: 600;\r\n  border-radius: 50%;\r\n  width: 40px;\r\n  height: 40px;\r\n  padding: 10px;\r\n  display: none;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: default;\r\n  box-shadow: 0 1px 6px rgb(0,0,0,0.4);\r\n}\r\n\r\n.high-priority-indicator {\r\n  color: var(--lightred);\r\n}\r\n\r\n.medium-priority-indicator {\r\n  color: var(--lightyellow);\r\n}\r\n\r\n.del-list-btn {\r\n  display: flex;\r\n  font-size: 20px;\r\n  width: 44px;\r\n  height: 44px;\r\n  position: absolute;\r\n  right: 10px;\r\n  color: var(--darkred);\r\n  box-shadow: none;\r\n}\r\n\r\n.sublist-wrapper {\r\n  padding: 5px 15px 25px 45px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 15px;\r\n  position: relative;\r\n}\r\n\r\n.sublist-checkmark { \r\n  color: white;\r\n  width: 24px;\r\n  height: 24px;\r\n  font-size: 12px;\r\n  border: none;\r\n  box-shadow: 0 1px 5px rgb(0,0,0,0.6);\r\n}\r\n\r\n.sublist {\r\n  padding: 5px 10px 5px 10px;\r\n  width: 60%;\r\n  border: none;\r\n  background: none;\r\n  border-bottom: 1px solid black;\r\n  color: black;\r\n  font-weight: 300;\r\n  cursor: pointer;\r\n  line-height: 25px;\r\n}\r\n\r\n.sublist[contenteditable]:empty::before {\r\n  font-weight: 100;\r\n  color: black;\r\n}\r\n\r\n.sublist-desc[contenteditable]:empty::before {\r\n  content: 'Click to edit sublist';\r\n}\r\n\r\n.sublist-time {\r\n  width: 10%;\r\n}\r\n\r\n.sublist-time[contenteditable]:empty::before {\r\n  content: '8:00 PM';\r\n}\r\n\r\n.sublist-duration {\r\n  width: 10%;\r\n}\r\n\r\n.sublist-duration[contenteditable]:empty::before {\r\n  content: '1h 30m';\r\n}\r\n\r\n*[contenteditable] {\r\n  border: none;\r\n  outline: none;\r\n  border-bottom: 1px solid gray;\r\n}\r\n\r\n*[contenteditable]:focus {\r\n  background: rgb(242, 242, 242);\r\n  border-radius: 8px;\r\n}\r\n\r\n.sublist[contenteditable]:empty::before {\r\n  font-weight: 300;\r\n}\r\n\r\nselect {\r\n  font-size: 16px;\r\n  background-color: white;\r\n  padding: 5px;\r\n  font-weight: 400;\r\n  width: 15%;\r\n  outline: none;\r\n  border: none;\r\n  box-shadow: 0 1px 6px rgb(0,0,0,0.4);\r\n  cursor: pointer;\r\n}\r\n\r\noption {\r\n  font-weight: 400;\r\n  background-color: white;\r\n}\r\n\r\noption:nth-child(2) {\r\n  background-color: var(--mediumgreen);\r\n}\r\n\r\noption:nth-child(3) {\r\n  background-color: var(--lightyellow);\r\n}\r\n\r\noption:nth-child(4) {\r\n  background-color: var(--lightred);\r\n}\r\n\r\n.sublist-wrapper > *:last-child {\r\n  font-size: 12px;\r\n  color: var(--darkred);\r\n  box-shadow: none;\r\n}"],sourceRoot:""}]);const a=s},449:(r,n,e)=>{e.d(n,{Z:()=>a});var t=e(537),o=e.n(t),i=e(645),s=e.n(i)()(o());s.push([r.id,".list-checkmark-checked, \r\n.sublist-checkmark-checked {\r\n    color: var(--ultragreen);\r\n}\r\n\r\n.list-checkmark-checked:hover, \r\n.sublist-checkmark-checked:hover {\r\n    background-color: var(--ultragreen);\r\n    color: var(--easygreen);\r\n}\r\n\r\n.list-title-checked,\r\n.sublist-desc-checked,\r\n.sublist-time-checked,\r\n.sublist-duration-checked, \r\n.select-checked {\r\n    text-decoration-line: line-through;\r\n}","",{version:3,sources:["webpack://./src/styles/main/3-lists-checked.css"],names:[],mappings:"AAAA;;IAEI,wBAAwB;AAC5B;;AAEA;;IAEI,mCAAmC;IACnC,uBAAuB;AAC3B;;AAEA;;;;;IAKI,kCAAkC;AACtC",sourcesContent:[".list-checkmark-checked, \r\n.sublist-checkmark-checked {\r\n    color: var(--ultragreen);\r\n}\r\n\r\n.list-checkmark-checked:hover, \r\n.sublist-checkmark-checked:hover {\r\n    background-color: var(--ultragreen);\r\n    color: var(--easygreen);\r\n}\r\n\r\n.list-title-checked,\r\n.sublist-desc-checked,\r\n.sublist-time-checked,\r\n.sublist-duration-checked, \r\n.select-checked {\r\n    text-decoration-line: line-through;\r\n}"],sourceRoot:""}]);const a=s},645:r=>{r.exports=function(r){var n=[];return n.toString=function(){return this.map((function(n){var e="",t=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),t&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=r(n),t&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(r,e,t,o,i){"string"==typeof r&&(r=[[null,r,void 0]]);var s={};if(t)for(var a=0;a<this.length;a++){var A=this[a][0];null!=A&&(s[A]=!0)}for(var c=0;c<r.length;c++){var l=[].concat(r[c]);t&&s[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),e&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=e):l[2]=e),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),n.push(l))}},n}},537:r=>{r.exports=function(r){var n=r[1],e=r[3];if(!e)return n;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),i="/*# ".concat(o," */"),s=e.sources.map((function(r){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(r," */")}));return[n].concat(s).concat([i]).join("\n")}return[n].join("\n")}},379:r=>{var n=[];function e(r){for(var e=-1,t=0;t<n.length;t++)if(n[t].identifier===r){e=t;break}return e}function t(r,t){for(var i={},s=[],a=0;a<r.length;a++){var A=r[a],c=t.base?A[0]+t.base:A[0],l=i[c]||0,d="".concat(c," ").concat(l);i[c]=l+1;var p=e(d),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var g=o(u,t);t.byIndex=a,n.splice(a,0,{identifier:d,updater:g,references:1})}s.push(d)}return s}function o(r,n){var e=n.domAPI(n);return e.update(r),function(n){if(n){if(n.css===r.css&&n.media===r.media&&n.sourceMap===r.sourceMap&&n.supports===r.supports&&n.layer===r.layer)return;e.update(r=n)}else e.remove()}}r.exports=function(r,o){var i=t(r=r||[],o=o||{});return function(r){r=r||[];for(var s=0;s<i.length;s++){var a=e(i[s]);n[a].references--}for(var A=t(r,o),c=0;c<i.length;c++){var l=e(i[c]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}i=A}}},569:r=>{var n={};r.exports=function(r,e){var t=function(r){if(void 0===n[r]){var e=document.querySelector(r);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(r){e=null}n[r]=e}return n[r]}(r);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:r=>{r.exports=function(r){var n=document.createElement("style");return r.setAttributes(n,r.attributes),r.insert(n,r.options),n}},565:(r,n,e)=>{r.exports=function(r){var n=e.nc;n&&r.setAttribute("nonce",n)}},795:r=>{r.exports=function(r){var n=r.insertStyleElement(r);return{update:function(e){!function(r,n,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,o&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(t,r,n.options)}(n,r,e)},remove:function(){!function(r){if(null===r.parentNode)return!1;r.parentNode.removeChild(r)}(n)}}}},589:r=>{r.exports=function(r,n){if(n.styleSheet)n.styleSheet.cssText=r;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(r))}}},762:(r,n,e)=>{r.exports=e.p+"1c3c81d65eec935dee14.svg"}},n={};function e(t){var o=n[t];if(void 0!==o)return o.exports;var i=n[t]={id:t,exports:{}};return r[t](i,i.exports,e),i.exports}e.n=r=>{var n=r&&r.__esModule?()=>r.default:()=>r;return e.d(n,{a:n}),n},e.d=(r,n)=>{for(var t in n)e.o(n,t)&&!e.o(r,t)&&Object.defineProperty(r,t,{enumerable:!0,get:n[t]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(r){if("object"==typeof window)return window}}(),e.o=(r,n)=>Object.prototype.hasOwnProperty.call(r,n),(()=>{var r;e.g.importScripts&&(r=e.g.location+"");var n=e.g.document;if(!r&&n&&(n.currentScript&&(r=n.currentScript.src),!r)){var t=n.getElementsByTagName("script");t.length&&(r=t[t.length-1].src)}if(!r)throw new Error("Automatic publicPath is not supported in this browser");r=r.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=r})(),(()=>{const r=r=>{console.log(r);const n=Array.from(r.path[2].childNodes);console.log(n);const e=r.path[1],t=n.indexOf(e);console.log(t);const o=document.querySelector("input[type=date]").value,i=JSON.parse(localStorage.getItem(o));console.log(i);const s=Array.from(r.path[3].childNodes),a=s.indexOf(r.path[2]),A=s[a],c=i[a];console.log(A),console.log(c),c.sublists.splice(t-1,1),localStorage.setItem(o,JSON.stringify(i)),e.remove(),console.log(JSON.parse(localStorage.getItem(o)))},n=r=>{const n=r.target,e=r.path[1].children[1],i=r.path[1].children[2],s=r.path[1].children[3],a=r.path[1].children[4];t(n,e,i,s,a),o(r)},t=(r,n,e,t,o)=>{r.classList.toggle("sublist-checkmark-checked"),n.classList.toggle("sublist-desc-checked"),e.classList.toggle("sublist-time-checked"),t.classList.toggle("sublist-duration-checked"),o.classList.toggle("select-checked")},o=r=>{const n=r.target.parentNode.parentNode.children,e=n[0],t=n[0].children[0],o=r.target.classList,a=n.length-1,A=s(n),c=t.classList.contains("list-checkmark-checked"),l=o.contains("sublist-checkmark-checked");c&&(l||i(e)),A==a&&i(e)},i=r=>{const n=r.children[0],e=r.children[1];n.classList.toggle("list-checkmark-checked"),e.classList.toggle("list-title-checked")},s=r=>{let n=0;for(let e=0;e<r.length;e++)if(r[e].classList.contains("sublist-wrapper")){const t=r[e];a(t)&&n++}return n},a=r=>{const n=r.children[0].classList.contains("sublist-checkmark-checked"),e=r.children[1].classList.contains("sublist-desc-checked"),t=r.children[2].classList.contains("sublist-time-checked"),o=r.children[3].classList.contains("sublist-duration-checked"),i=r.children[4].classList.contains("select-checked");if(n&&e&&t&&o&&i)return!0},A=r=>{},c=r=>{const n=document.createElement("div");n.classList.add("sublist-wrapper"),l(n),d(n),p(n),u(n),g(n),h(n),r.appendChild(n)},l=r=>{const e=document.createElement("button");e.classList.add("sublist-checkmark","list-checkmark"),e.innerHTML="&#10004;",e.addEventListener("click",n),r.appendChild(e)},d=r=>{const n=document.createElement("p");n.classList.add("sublist","sublist-desc"),n.setAttribute("contenteditable",""),r.appendChild(n)},p=r=>{const n=document.createElement("p");n.classList.add("sublist","sublist-time"),n.setAttribute("contenteditable",""),r.appendChild(n)},u=r=>{const n=document.createElement("p");n.classList.add("sublist","sublist-duration"),n.setAttribute("contenteditable",""),r.appendChild(n)},g=r=>{const n=document.createElement("select"),e=document.createElement("option"),t=document.createElement("option"),o=document.createElement("option"),i=document.createElement("option");e.setAttribute("value","default"),e.innerText="--Prio Level--",t.setAttribute("value","low"),t.innerText="Low",o.setAttribute("value","medium"),o.innerText="Medium",i.setAttribute("value","high"),i.innerText="High",n.addEventListener("click",A),n.appendChild(e),n.appendChild(t),n.appendChild(o),n.appendChild(i),r.appendChild(n)},h=n=>{const e=document.createElement("button");e.innerHTML="&#10006;",e.addEventListener("click",r),n.appendChild(e)},b=(r,n,e,t)=>{r.childNodes[1].addEventListener("input",(r=>{const o=r.target.innerText,i=JSON.parse(localStorage.getItem(n));i[e].sublists[t].desc=o,localStorage.setItem(n,JSON.stringify(i)),console.log(JSON.parse(localStorage.getItem(n)))}))},C=(r,n,e,t)=>{const o=r.children[1];console.log(o.innerText);const i=JSON.parse(localStorage.getItem(n));console.log(i[e].sublists[t]),o.innerText=i[e].sublists[t].desc};class m{constructor(r,n,e,t,o){this.checked=r,this.desc=n,this.time=e,this.duration=t,this.prio=o}}const E=r=>{const n=r.path[2],e=r.path[1],t=r.path[1].children[0].classList.contains("list-checkmark-checked"),o=document.querySelector("input[type=date]").value;t&&i(e),c(n),f(r,n),((r,n,e,t,o)=>{const i=JSON.parse(localStorage.getItem(t)),s=r-1;i[e.indexOf(void 0)].sublists[s].desc=n.target.innerText,localStorage.setItem(t,JSON.stringify(i)),console.log(JSON.parse(localStorage.getItem(t)))})(Array.from(n.parentElement.childNodes),n.childNodes,o,n)},f=(r,n)=>{const e=document.querySelector("input[type=date]").value,t=JSON.parse(localStorage.getItem(e)),o=n.parentNode.childNodes,i=Array.from(o).indexOf(n);t[i].hasOwnProperty("sublists")||(t[i].sublists=[]),t[i].sublists.push(new m(!1,"","","","")),localStorage.setItem(e,JSON.stringify(t))},B=r=>{const n=r.path[2],e=document.querySelector(".lists-wrapper").childNodes,t=Array.from(e),o=document.querySelector("input[type=date]").value,i=t.indexOf(n),s=JSON.parse(localStorage.getItem(o));s.splice(i,1),localStorage.setItem(o,JSON.stringify(s)),n.remove()},x=r=>{const n=r.target,e=r.path[1].children[1],t=r.path[2].children;k(n,e),y(t)},k=(r,n)=>{r.classList.toggle("list-checkmark-checked"),n.classList.toggle("list-title-checked")},y=r=>{const n=r[0].children[0].classList.contains("list-checkmark-checked"),e=[];for(let n=1;n<r.length;n++)e.push(r[n]);n?e.forEach((r=>{!r.children[0].classList.contains("sublist-checkmark-checked")&&v(r)})):n||e.forEach((r=>{r.children[0].classList.contains("sublist-checkmark-checked")&&v(r)}))},v=r=>{if(r.classList.contains("sublist-wrapper")){const n=r.children[0],e=r.children[1],t=r.children[2],o=r.children[3],i=r.children[4];n.classList.toggle("sublist-checkmark-checked"),e.classList.toggle("sublist-desc-checked"),t.classList.toggle("sublist-time-checked"),o.classList.toggle("sublist-duration-checked"),i.classList.toggle("select-checked")}},w=r=>{const n=document.createElement("div");n.classList.add("list"),(r=>{const n=document.createElement("div");n.classList.add("list-header"),(r=>{const n=document.createElement("button");n.classList.add("list-checkmark"),n.addEventListener("mouseup",x),n.innerHTML="&#10004;",r.appendChild(n)})(n),(r=>{const n=document.createElement("h1");n.classList.add("list-title"),n.setAttribute("contenteditable",""),r.appendChild(n)})(n),(r=>{const n=document.createElement("button");n.classList.add("add-sublist-btn"),n.innerText="Add Sublist",n.addEventListener("click",E),r.appendChild(n)})(n),(r=>{const n=document.createElement("p");n.innerText="!",n.classList.add("priority-indicator"),r.appendChild(n)})(n),(r=>{const n=document.createElement("button");n.classList.add("del-list-btn"),n.innerHTML="&#10006;",n.addEventListener("click",B),r.appendChild(n)})(n),r.appendChild(n)})(n),r.appendChild(n)},I=(r,n,e)=>{const t=JSON.parse(localStorage.getItem(n));t[r].title=e.target.innerText,localStorage.setItem(n,JSON.stringify(t))},S=r=>{const n=r.target.value;if(L(),!localStorage.getItem(n)){const r=[];localStorage.setItem(n,JSON.stringify(r))}((r,n)=>{for(let e=0;e<r.length;e++){const t=document.querySelector(".lists-wrapper");w(t);const o=r[e],i=document.querySelectorAll(".list")[e],s=i.children[0].children[1];if(s.innerText=o.title,o.hasOwnProperty("sublists"))for(let r=0;r<o.sublists.length;r++){c(i);const t=i.childNodes[r+1];b(t,n,e,r),C(t,n,e,r)}s.addEventListener("input",(r=>{I(e,n,r)}))}})(JSON.parse(localStorage.getItem(n)),n)},L=()=>{document.querySelectorAll(".list").forEach((r=>r.remove()))};var Z=e(762);const Y=r=>{const n=new Image;n.src=Z,r.appendChild(n)},T=r=>{const n=document.createElement("h2");n.innerText="Today",r.appendChild(n)},N=r=>{const n=new Image;n.src=Z,r.appendChild(n)},z=r=>{const n=document.createElement("h2");n.innerText="Tomorrow",r.appendChild(n)};class q{constructor(r){this.title=r}}var O=e(379),j=e.n(O),J=e(795),W=e.n(J),R=e(569),U=e.n(R),P=e(565),M=e.n(P),X=e(216),H=e.n(X),V=e(589),F=e.n(V),D=e(317),G={};G.styleTagTransform=F(),G.setAttributes=M(),G.insert=U().bind(null,"head"),G.domAPI=W(),G.insertStyleElement=H(),j()(D.Z,G),D.Z&&D.Z.locals&&D.Z.locals;var $=e(930),Q={};Q.styleTagTransform=F(),Q.setAttributes=M(),Q.insert=U().bind(null,"head"),Q.domAPI=W(),Q.insertStyleElement=H(),j()($.Z,Q),$.Z&&$.Z.locals&&$.Z.locals;var _=e(365),K={};K.styleTagTransform=F(),K.setAttributes=M(),K.insert=U().bind(null,"head"),K.domAPI=W(),K.insertStyleElement=H(),j()(_.Z,K),_.Z&&_.Z.locals&&_.Z.locals;var rr=e(149),nr={};nr.styleTagTransform=F(),nr.setAttributes=M(),nr.insert=U().bind(null,"head"),nr.domAPI=W(),nr.insertStyleElement=H(),j()(rr.Z,nr),rr.Z&&rr.Z.locals&&rr.Z.locals;var er=e(295),tr={};tr.styleTagTransform=F(),tr.setAttributes=M(),tr.insert=U().bind(null,"head"),tr.domAPI=W(),tr.insertStyleElement=H(),j()(er.Z,tr),er.Z&&er.Z.locals&&er.Z.locals;var or=e(71),ir={};ir.styleTagTransform=F(),ir.setAttributes=M(),ir.insert=U().bind(null,"head"),ir.domAPI=W(),ir.insertStyleElement=H(),j()(or.Z,ir),or.Z&&or.Z.locals&&or.Z.locals;var sr=e(449),ar={};ar.styleTagTransform=F(),ar.setAttributes=M(),ar.insert=U().bind(null,"head"),ar.domAPI=W(),ar.insertStyleElement=H(),j()(sr.Z,ar),sr.Z&&sr.Z.locals&&sr.Z.locals,(()=>{const r=document.createElement("header");(r=>{const n=document.createElement("h1");n.classList.add("title"),n.innerText="Daily Planner",r.appendChild(n)})(r),(r=>{const n=document.createElement("input");n.setAttribute("type","date"),n.addEventListener("change",S),r.appendChild(n)})(r),document.body.appendChild(r)})(),(()=>{const r=document.createElement("main");(r=>{const n=document.createElement("div");n.classList.add("sidebar"),(r=>{const n=document.createElement("div");n.classList.add("today-wrapper","sidebar-wrappers"),Y(n),T(n),r.appendChild(n)})(n),(r=>{const n=document.createElement("div");n.classList.add("tom-wrapper","sidebar-wrappers"),N(n),z(n),r.appendChild(n)})(n),(r=>{const n=document.createElement("button");n.classList.add("add-list-btn"),n.innerText="Add List",r.appendChild(n)})(n),r.appendChild(n)})(r),(r=>{const n=document.createElement("div");n.classList.add("lists-wrapper"),r.appendChild(n)})(r),document.body.appendChild(r)})(),(()=>{const r=document.querySelector(".add-list-btn"),n=document.querySelector(".lists-wrapper");r.addEventListener("click",(r=>{w(n),(()=>{const r=document.querySelector("input[type=date]"),n=new q(""),e=JSON.parse(localStorage.getItem(r.value));e.push(n),localStorage.setItem(r.value,JSON.stringify(e))})();const e=document.querySelector("input[type=date]").value,t=r.path[2].children[1].children;for(let r=0;r<t.length;r++)t[r].children[0].children[1].addEventListener("input",(n=>{const t=JSON.parse(localStorage.getItem(e));t[r].title=n.target.innerText,localStorage.setItem(e,JSON.stringify(t))}))}))})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,